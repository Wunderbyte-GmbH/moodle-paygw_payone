on: [push, pull_request]

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

jobs:
  ci:
    uses: Wunderbyte-GmbH/catalyst-moodle-workflows/.github/workflows/ci.yml@main
    with:
      disable_release: true
      enable_phpmd: true
      codechecker_max_warnings: 0
      extra_plugin_runners:
        moodle-plugin-ci add-plugin Wunderbyte-GmbH/moodle-local_shopping_cart --branch MOODLE_401_DEV

      workarounds: |
        echo "CODECHECKER_IGNORE_PATHS=OpenTBS, TinyButStrong" >> $GITHUB_ENV
        echo "PHPDOCCHECKER_IGNORE_PATHS=OpenTBS, TinyButStrong" >> $GITHUB_ENV
        echo "MUSTACHE_IGNORE_NAMES=bookingoption_dates_custom_list_items.mustache,form_booking_options_selector_suggestion.mustache,table_list_container.mustache,optiondatesteacherstable_list.mustache,optiondatesteacherstable_list_row.mustache,optiondatesteacherstable_list_container.mustache,option_collapsible_close.mustache,option_collapsible_open.mustache,static.mustache,advcheckbox.mustache,select.mustache,shorttext.mustache,mobile_details_button.mustache,mobile_mybookings_list.mustache,mobile_booking_option_details.mustache,mobile_view_page.mustache" >> $GITHUB_ENV

        # WORKAROUND 17/04/2025: The following code is a workaround for the "File is stale and needs to be rebuilt" error
        # This occurs when AMD modules import Moodle core dependencies
        # See issue: https://github.com/moodlehq/moodle-plugin-ci/issues/350
        # This workaround should be removed once the issue is fixed upstream

        # Load NVM and use the version from .nvmrc
        export NVM_DIR="$HOME/.nvm"
        [ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"

        # Go to moodle directory
        cd moodle

        # Use NVM to set Node version and ensure grunt-cli is installed
        nvm use
        npm install
        npm install -g grunt-cli

        # Go back to plugin directory
        cd ../plugin

        # Pre-build AMD files to avoid stale file warnings
        echo "=== Building AMD files before CI check ==="
        grunt --gruntfile ../moodle/Gruntfile.js amd
        echo "AMD files built successfully"

        # Go Back to main directory
        cd ..

        # END OF WORKAROUND

    secrets:
      # Only needed if NOT using disable_release: true
      moodle_org_token: ${{ secrets.MOODLE_ORG_TOKEN }}
